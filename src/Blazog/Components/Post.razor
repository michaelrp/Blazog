@inject HttpClient Http;
@inject IDataLoader Loader
@inject ILocalStorage Store
@inject NavigationManager NavigationManager

<PostTitle Info="@postInfo"></PostTitle>

<div class="main-content">
    <PostContent>@((MarkupString)html)</PostContent>
    <PostNavs CurrentPostIndex="@postInfo.Index"></PostNavs>
</div>

@code {
    [Parameter]
    public string Label { get; set; }
    private PostInfo postInfo;
    private PostDoc postDoc;
    private string html = "<div>Loading...</div>";

    protected override void OnInitialized()
    {
        postInfo = new PostInfo
        {
            Title = "",
            Tags = new string[] { }
        };
    }

    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrEmpty(Label))
        {
            NavigationManager.NavigateTo("/posts");
        }

        postInfo = (await Store.GetPostInfosAsync()).FirstOrDefault(p => p.Label == Label);

        postDoc = await GetPostDoc(postInfo);

        html = postDoc.GetContentHtml();
    }

    private async Task<PostDoc> GetPostDoc(PostInfo info)
    {
        postDoc = await Store.GetPostDocAsync(Label);

        if (postDoc == null || info.Hash != postDoc.Hash)
        {
            postDoc = await Loader.LoadPost(info.Label, info.Hash);
        }

        return postDoc;
    }
}